<Project>

  <PropertyGroup>
    <DefaultLanguage Condition="'$(DefaultLanguage)' == ''">en-US</DefaultLanguage>
    <_SdkVisualStudioVersion>$(VisualStudioVersion)</_SdkVisualStudioVersion>
    <_SdkVisualStudioVersion Condition="'$(_SdkVisualStudioVersion)' == '' or '$(_SdkVisualStudioVersion)' &lt; '14.0' ">15.0</_SdkVisualStudioVersion>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(TargetFramework)' != '' and $(TargetFramework.Contains(','))" />

    <When Condition="'$(TargetFramework)' != '' and $(TargetFramework.Contains('-'))">
      <!-- Handle legacy PCL and client profiles -->
      <PropertyGroup Condition="'$(TargetFramework)' != ''" >
        <TargetFramework>$(TargetFramework.ToLowerInvariant())</TargetFramework>
        <!-- if net-client is only specified then default to the highest supported version of the profile -->
        <TargetFramework Condition="'$(TargetFramework)' == 'net-client'">net40-client</TargetFramework>
        <_SdkShortFrameworkIdentifierWithVersion>$(TargetFramework.Split('-')[0])</_SdkShortFrameworkIdentifierWithVersion>
        <_SdkShortFrameworkIdentifier>$(_SdkShortFrameworkIdentifierWithVersion.TrimEnd('.0123456789'))</_SdkShortFrameworkIdentifier>
        <_SdkShortFrameworkVersion>$(_SdkShortFrameworkIdentifierWithVersion.Substring($(_SdkShortFrameworkIdentifier.Length)))</_SdkShortFrameworkVersion>
        <_SdkShortFrameworkProfile>$(TargetFramework.Split('-')[1])</_SdkShortFrameworkProfile>
        <_SdkShortFrameworkProfileCount>$(_SdkShortFrameworkProfile.Split('+').Length)</_SdkShortFrameworkProfileCount>
        <!-- Pre and post-pend the separator char + to the tfm list after counting so we can easily do a Contains() search -->
        <_SdkShortFrameworkProfile>+$(_SdkShortFrameworkProfile)+</_SdkShortFrameworkProfile>
      </PropertyGroup>
    </When>

    <Otherwise>
      <!-- Convert $(TargetFramework) to lower case and split $(TargetFramework) (e.g. net45) into short identifier and short version (e.g. 'net' and '45'). -->
      <PropertyGroup Condition="'$(TargetFramework)' != ''">
        <TargetFramework>$(TargetFramework.ToLowerInvariant())</TargetFramework>
        <_SdkShortFrameworkIdentifier>$(TargetFramework.TrimEnd('.0123456789'))</_SdkShortFrameworkIdentifier>
        <_SdkShortFrameworkVersion>$(TargetFramework.Substring($(_SdkShortFrameworkIdentifier.Length)))</_SdkShortFrameworkVersion>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Map short name to long name. See earlier comment for example of how to work with identifiers that are not recognized here. -->
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == ''">

    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'net'">.NETFramework</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'netmf'">.NETMicroFramework</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'portable'">.NETPortable</TargetFrameworkIdentifier>

    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'sl'">Silverlight</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'wp'">WindowsPhone</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'wpa'">WindowsPhoneApp</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'win'">.NETCore</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'uap'">.NETCore</TargetFrameworkIdentifier>

    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'monoandroid'">MonoAndroid</TargetFrameworkIdentifier>

    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'xamarinandroid'">Xamarin.Android</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'xamarin.android'">Xamarin.Android</TargetFrameworkIdentifier>

    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'xamarinios'">Xamarin.iOS</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'xamarin.ios'">Xamarin.iOS</TargetFrameworkIdentifier>

    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'xamarinmac'">Xamarin.Mac</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'xamarin.mac'">Xamarin.Mac</TargetFrameworkIdentifier>

    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'xamarintvos'">Xamarin.TVOS</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'xamarin.tvos'">Xamarin.TVOS</TargetFrameworkIdentifier>

    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'xamarinwatchos'">Xamarin.WatchOS</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'xamarin.watchos'">Xamarin.WatchOS</TargetFrameworkIdentifier>

    <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkIdentifier)' == 'tizen'">Tizen</TargetFrameworkIdentifier>

  </PropertyGroup>

  <Choose>
    <When Condition="'$(_SdkShortFrameworkVersion)' != '' and $(_SdkShortFrameworkVersion.Contains('.'))">
      <!-- Versions with dots are taken as is and just given leading 'v'. -->
      <PropertyGroup Condition="'$(TargetFrameworkVersion)' == ''">
        <TargetFrameworkVersion>v$(_SdkShortFrameworkVersion)</TargetFrameworkVersion>
      </PropertyGroup>
    </When>

    <When Condition="'$(_SdkShortFrameworkVersion)' != ''">
      <!-- Versions with no dots and up to 3 characters get leading 'v' and implicit dots between characters. -->
      <PropertyGroup Condition="'$(TargetFrameworkVersion)' == ''">
        <TargetFrameworkVersion Condition="$(_SdkShortFrameworkVersion.Length) == 1">v$(_SdkShortFrameworkVersion[0]).0</TargetFrameworkVersion>
        <TargetFrameworkVersion Condition="$(_SdkShortFrameworkVersion.Length) == 2">v$(_SdkShortFrameworkVersion[0]).$(_SdkShortFrameworkVersion[1])</TargetFrameworkVersion>
        <TargetFrameworkVersion Condition="$(_SdkShortFrameworkVersion.Length) == 3">v$(_SdkShortFrameworkVersion[0]).$(_SdkShortFrameworkVersion[1]).$(_SdkShortFrameworkVersion[2])</TargetFrameworkVersion>
      </PropertyGroup>
    </When>

    <Otherwise />
  </Choose>

  <PropertyGroup>
    <_SdkTargetFrameworkVersionWithoutV>$(TargetFrameworkVersion)</_SdkTargetFrameworkVersionWithoutV>
    <_SdkTargetFrameworkVersionWithoutV Condition="$(TargetFrameworkVersion.StartsWith('v'))">$(TargetFrameworkVersion.Substring(1))</_SdkTargetFrameworkVersionWithoutV>
  </PropertyGroup>

  <PropertyGroup Label="Build.Output">
    <Configuration Condition="'$(Configuration)'==''">Debug</Configuration>
    <Platform Condition="'$(Platform)'==''">AnyCPU</Platform>
    <PlatformName Condition="'$(PlatformName)' == ''">$(Platform)</PlatformName>

    <BaseOutputPath Condition="'$(BaseOutputPath)' == ''">bin\</BaseOutputPath>
    <BaseOutputPath Condition="!HasTrailingSlash('$(BaseOutputPath)')">$(BaseOutputPath)\</BaseOutputPath>
    <OutputPath Condition="'$(OutputPath)' == '' and '$(PlatformName)' == 'AnyCPU'">$(BaseOutputPath)$(Configuration)\</OutputPath>
    <OutputPath Condition="'$(OutputPath)' == '' and '$(PlatformName)' != 'AnyCPU'">$(BaseOutputPath)$(PlatformName)\$(Configuration)\</OutputPath>
    <OutputPath Condition="!HasTrailingSlash('$(OutputPath)')">$(OutputPath)\</OutputPath>

    <BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)' == ''">obj\</BaseIntermediateOutputPath>
    <BaseIntermediateOutputPath Condition="!HasTrailingSlash('$(BaseIntermediateOutputPath)')">$(BaseIntermediateOutputPath)\</BaseIntermediateOutputPath>
    <IntermediateOutputPath Condition=" $(IntermediateOutputPath) == '' and '$(PlatformName)' == 'AnyCPU' ">$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
    <IntermediateOutputPath Condition=" $(IntermediateOutputPath) == '' and '$(PlatformName)' != 'AnyCPU' ">$(BaseIntermediateOutputPath)$(PlatformName)\$(Configuration)\</IntermediateOutputPath>
    <IntermediateOutputPath Condition="!HasTrailingSlash('$(IntermediateOutputPath)')">$(IntermediateOutputPath)\</IntermediateOutputPath>
  </PropertyGroup>

  <Import Project="$(MSBuildThisFileDirectory)Platforms.targets" />

</Project>