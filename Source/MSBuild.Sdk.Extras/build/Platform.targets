<Project>
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <PropertyGroup Condition="$(_SdkShortFrameworkProfileCount) == 1 and
			$(_SdkShortFrameworkProfile.Contains('+client+'))">
		<TargetFrameworkProfile>Client</TargetFrameworkProfile>
		<IncludeProjectPriFile>false</IncludeProjectPriFile>
		<!-- .NET Client profiles defines as NET35_CLIENT, NET40_CLIENT etc -->
		<ImplicitFrameworkDefine Condition="'$(DisableImplicitFrameworkDefines)' != 'true'">$(_SdkShortFrameworkIdentifierWithVersion.ToUpperInvariant())_CLIENT</ImplicitFrameworkDefine>
	</PropertyGroup>

	<Import Project="$(MSBuildThisFileDirectory)platforms\$(TargetFrameworkIdentifier).targets"
			Condition="Exists('$(MSBuildThisFileDirectory)platforms\$(TargetFrameworkIdentifier).targets')" />

	<ImportGroup Condition="!Exists('$(MSBuildThisFileDirectory)platforms\$(TargetFrameworkIdentifier).targets')">
		<Import Project="$(MSBuildThisFileDirectory)platforms\Windows.targets"
				Condition="'$(TargetFrameworkIdentifier)' == '.NETCore'" />
		<Import Project="$(MSBuildThisFileDirectory)platforms\Portable.targets"
				Condition="'$(TargetFrameworkIdentifier)' == '.NETPortable'" />
		<Import Project="$(MSBuildThisFileDirectory)platforms\NETFramework.targets"
				Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'" />
	</ImportGroup>

	<!-- Add conditional compilation symbols for the target framework (for example NET461, NETSTANDARD2_0, NETCOREAPP1_0) -->
	<!--<PropertyGroup Condition="'$(DisableImplicitFrameworkDefines)' != 'true'">
		<ImplicitFrameworkDefine>$(TargetFramework.Replace('.','_').ToUpperInvariant())</ImplicitFrameworkDefine>
	</PropertyGroup>-->

	<Target Name="DisplayMissingLanguageTargetsError" Condition="'$(_SdkLanguageTargetsMissing)' == 'true'" BeforeTargets="_CheckForUnsupportedTargetFramework">
		<Error Condition="'$(_SdkShortFrameworkIdentifier)' != 'portable'" Text="The specified language targets for $(TargetFramework) is missing. Ensure correct tooling is installed for '$(_SdkShortFrameworkIdentifier)'" />
		<Error Condition="'$(_SdkShortFrameworkIdentifier)' == 'portable'" Text="The specified TFM '$(TargetFramework)' is not valid. Check that it's a valid combination: https://portablelibraryprofiles.stephencleary.com/"  />
	</Target>

	<Target Name="ExtrasIncludeLibraryLayoutItems"
			Condition="'$(GenerateLibraryLayout)' == 'true' and '$(SDKIdentifier)' == 'Windows'"
			DependsOnTargets="PrepareLibraryLayout">
		<ItemGroup>
			<TfmSpecificPackageFile Include="@(_LayoutFile)" PackagePath="lib\$(TargetFramework)\%(_LayoutFile.TargetPath)" />
		</ItemGroup>
	</Target>

	<!-- Handle Library Layout in NuGet packages -->
	<PropertyGroup>
		<TargetsForTfmSpecificContentInPackage Condition=" '$(ExtrasSkipLibraryLayout)' != 'true' ">$(TargetsForTfmSpecificContentInPackage);ExtrasIncludeLibraryLayoutItems</TargetsForTfmSpecificContentInPackage>
	</PropertyGroup>

</Project>